source("~/Documents/학교/IE426_기술경영데이터분석/data/2/TMDA_Patent_sample_code_2_stm.R")
library(jsonlite)
library(colorspace)
file_name <- is.na(file_name) ? "All" : file_name
file_name <- if(is.na(file_name)) "All" else file_name
data <- fromJSON(txt=paste('datas/',file_name,'.json',sep=''))$patents
file_name <- if(is.na(file_name)) "All" else file_name
x <- if(is.na(file_name)) "All" else file_name
file_name <- "All"
file_name <- if(is.na(file_name2)) "All" else file_name
file_name <- if(exists(file_name)) "All" else file_name
file_name <- if(exists(file_name)) file_name else "All"
setwd("~/Code/GitHub/nuclear-power-patent-analysis")
file_name <- "All"
is_pdf <- FALSE
max <- 5 # TOP countries number
# For script
if(exists('file_name_loop')){
file_name <- file_name_loop
}
if(is_pdf){
pdf(paste0('plots/', file_name,'.pdf'), width= 5, height= 5)
}
# Load Data
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
library(jsonlite)
library(colorspace)
# Parameters
file_name <- "All"
is_pdf <- FALSE
max <- 5 # TOP countries number
# For script
if(exists('file_name_loop')){
file_name <- file_name_loop
}
if(is_pdf){
pdf(paste0('plots/', file_name,'.pdf'), width= 5, height= 5)
}
# Load Data
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
sprintf('count of row: %d', nrow(data))
sprintf('count of column: %d', ncol(data))
# Preprocessing
patent_year <- as.numeric(substr(data$patent_date, 1, 4))
application_year <- sapply(1:nrow(data), function(i) as.numeric(substr(data[i,]$applications[[1]]$app_date,1, 4)))
data$year <- patent_year
data$app_year <- application_year
for (i in 1:nrow(data)){
country <- data[i,]$assignees[[1]]$assignee_country[1]
if (is.na(country))
country <- data[i,]$inventors[[1]]$inventor_country[1]
if (is.na(country))
country <- 'unknown'
data$country[i] <- country
}
source("01_top_country.R")
source("02_patent_by_year.R")
source("03_top_country_by_year.R")
if(is_pdf){
dev.off()
}
install.packages("stm")
install.packages("stringr")
install.packages("tm")
install.packages("stopwords")
library(stm)
library(stringr)
library(stopwords)
library(tm)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords <- stopwords(language = "en", source = "smart")
library(stopwords)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
library(stopwords)
stopwords <- stopwords(language = "en", source = "smart")
install.packages("stopwords")
stopwords <- stopwords(language = "en", source = "smart")
install.packages("stopwords")
stopwords <- stopwords(language = "en", source = "smart")
install.packages("stm")
install.packages("stringr")
install.packages("stopwords")
install.packages("tm")
library(stm)
library(stringr)
library(stopwords)
library(tm)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords <- stopwords(language = "en", source = "smart")
install.packages("stopwords")
install.packages("stopwords")
library(stopwords)
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
stopwords <- c(stopwords, custom)
# Preprocessing - textProcessor
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#add stopwords
custom_add <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
install.packages("stm")
install.packages("stringr")
install.packages("tm")
library(stm)
library(stringr)
library(tm)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
install.packages("stopwords")
library(stopwords)
stopwords <- stopwords(language = "en", source = "smart")
library(stopwords)
install.packages("stopwords")
library(stopwords)
stopwords <- stopwords(language = "en", source = "smart")
install.packages("stopwords")
install.packages("stopwords")
stopwords <- stopwords(language = "en", source = "smart")
stopwords::stopwords <- stopwords(language = "en", source = "smart")
install.packages("stm")
install.packages("stringr")
install.packages("tm")
install.packages("stopwords")
library(stm)
library(stringr)
library(tm)
library(stopwords)
library(stm)
library(stringr)
library(stopwords)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords::stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
stopwords <- c(stopwords, custom)
# Preprocessing - textProcessor
library(tm)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#add stopwords
custom_add <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
custom_add <- c(custom_add, 'includ', 'total', 'tool', 'valu', 'width', 'set', 'result', 'plus', 'measur', 'later', 'includ', 'high', 'enabl')
custom_add <- c(custom_add, 'method', 'contain', 'target', 'control', 'unit', 'end', 'imag', 'object')
print(custom_add)
stopwords <- c(stopwords, custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
#STM
topic_count <- 30
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
#plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
labelTopics(mystm, topics=1:topic_count, n=7)
print(names(myout$meta))
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
print(length(app_year))
print(length(myout$meta$app_year))
print(length(US))
print(length(myout$metaUS))
print(length(myout$meta$US))
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
print(length(myout$meta$app_year))
print(length(myout$meta$US))
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
print(length(myout$meta$app_year))
print(length(myout$meta$US))
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
print(result[3]$tables[[4]])
print(result[3]$tables[4])
print(result[3]$tables[,4])
print(result[3]$tables[,3])
print(result[3]$tables)
print(result[3]$tables['Pr(>|t|)'])
print(result[3]$tables)
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
print(myout%meta)
print(myout$meta)
print(sumamry(myout$meta))
print(summamry(myout$meta))
print(summary(myout$meta))
print(summary(result[3]$tables))
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
#beta
logbeta <- as.data.frame(mystm[["beta"]][["logbeta"]][[1]])
beta <- as.data.frame(exp(logbeta))
colnames(beta) <- myout$vocab
colnames(logbeta) <- myout$vocab
write.csv(beta, file=paste0("results/beta_",Sys.time(),".csv"), row.names=TRUE)
write.csv(logbeta, file=paste0("results/logbeta_",Sys.time(),".csv"), row.names=TRUE)
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR + app_year:DE, data=myout$meta)
=
=
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR + app_year:DE, data=myout$meta)
reg2 = lm(c(1:topic_count) ~ app_year, data=myout$meta)
reg2 = lm(c(1:topic_count) ~ US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR + app_year:DE, data=myout$meta)
print(app_year:US)
print(myout$meta$app_year:US)
print(myout$meta$app_year:myout$meta$US)
#reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
print(summary(myout$meta))
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
# Add stopwords
stopwords <- c(stopwords, 'ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
stopwords <- c(stopwords, 'includ', 'total', 'tool', 'valu', 'width', 'set', 'result', 'plus', 'measur', 'later', 'includ', 'high', 'enabl')
stopwords <- c(stopwords, 'method', 'contain', 'target', 'control', 'unit', 'end', 'imag', 'object')
print(stopwords)
# Add stopwords
stopwords_add <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
stopwords_add <- c(stopwords_add, 'includ', 'total', 'tool', 'valu', 'width', 'set', 'result', 'plus', 'measur', 'later', 'includ', 'high', 'enabl')
stopwords_add <- c(stopwords_add, 'method', 'contain', 'target', 'control', 'unit', 'end', 'imag', 'object')
print(stopwords_add)
stopwords <- c(stopwords, stopwords_add)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 12)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
stopwords_add <- c(stopwords_add, 'system','product','process','contain','case','measur','determin','base')
print(stopwords_add)
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
# Beta
logbeta <- as.data.frame(mystm[["beta"]][["logbeta"]][[1]])
beta <- as.data.frame(exp(logbeta))
colnames(beta) <- myout$vocab
colnames(logbeta) <- myout$vocab
write.csv(beta, file=paste0("results/beta_",Sys.time(),".csv"), row.names=TRUE)
write.csv(logbeta, file=paste0("results/logbeta_",Sys.time(),".csv"), row.names=TRUE)
