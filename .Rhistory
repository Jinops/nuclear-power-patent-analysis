source("~/Documents/학교/IE426_기술경영데이터분석/data/2/TMDA_Patent_sample_code_2_stm.R")
library(jsonlite)
library(colorspace)
file_name <- is.na(file_name) ? "All" : file_name
file_name <- if(is.na(file_name)) "All" else file_name
data <- fromJSON(txt=paste('datas/',file_name,'.json',sep=''))$patents
file_name <- if(is.na(file_name)) "All" else file_name
x <- if(is.na(file_name)) "All" else file_name
file_name <- "All"
file_name <- if(is.na(file_name2)) "All" else file_name
file_name <- if(exists(file_name)) "All" else file_name
file_name <- if(exists(file_name)) file_name else "All"
library(colorspace)
file_name <- if(exists(file_name)) file_name else "All"
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
library(jsonlite)
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0('./datas/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
path <- paste0('datas/',file_name,'.json')
data <- fromJSON(txt=path)$patents
file_name <- if(exists(file_name)) file_name else "All"
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(txt='datas/All.json')$patents
file_name <- if(exists(file_name)) file_name else "G21B"
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))
$patents
data <- fromJSON(txt=paste0('data/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(txt=paste0(file_name,'.json'))$patents
data <- fromJSON(txt=paste(file_name,'.json'))$patents
data <- fromJSON(txt=paste(file_name,'.json'),sep="")$patents
data <- fromJSON(txt=paste(file_name,'.json',sep="")$patents
data <- fromJSON(txt=paste(file_name,'.json',sep="")$patents
data <- fromJSON(txt=paste(file_name,'.json',sep=""))$patents
All
file_name <- if(exists(file_name)) file_name else "All"
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
data <- fromJSON(readLines(paste0('datas/',file_name,'.json')))$patents
file_name <- if(exists(file_name)) file_name else "G21B"
data <- fromJSON(readLines(paste0('datas/',file_name,'.json')))$patents
setwd("~/Code/GitHub/nuclear-power-patent-analysis")
file_name <- if(exists(file_name)) file_name else "All"
data <- fromJSON(txt=paste0('datas/',file_name,'.json'))$patents
file_name <- if(exists(file_name)) file_name else "All"
data <- fromJSON(readLines(paste0('datas/',file_name,'.json')))$patents
sprintf('count of row: %d', nrow(data))
sprintf('count of column: %d', ncol(data))
file_name <- "All"
if(exists(file_name_loop)){
file_name <- file_name_loop
}
if(exists('file_name_loop')){
file_name <- file_name_loop
}
data <- fromJSON(readLines(paste0('datas/',file_name,'.json')))$patents
file_name <- "All"
if(exists('file_name_loop')) file_name <- file_name_loop
data <- fromJSON(readLines(paste0('datas/',file_name,'.json')))$patents
sprintf('count of row: %d', nrow(data))
sprintf('count of column: %d', ncol(data))
print(data$text[1])
# For saving plots as pdf
pdf(paste('plots/',file_name,'.pdf',sep=''), width= 5, height= 5)
# Definition
max <- 5 # TOP countries number
# Preprocessing
patent_year <- as.numeric(substr(data$patent_date, 1, 4))
app_year <- sapply(1:nrow(data), function(i) as.numeric(substr(data[i,]$applications[[1]]$app_date,1, 4)))
data$year <- patent_year
for (i in 1:nrow(data)){
country <- data[i,]$assignees[[1]]$assignee_country[1]
if (is.na(country))
country <- data[i,]$inventors[[1]]$inventor_country[1]
if (is.na(country))
country <- 'unknown'
data$country[i] <- country
}
print(data$country)
#1 Patent registrations by year
title <- sprintf("Patent registrations by year\n(%s)", file_name)
#1 Patent registrations by year
source("01_patent_registration.R")
print(data$country)
#1 Patent registrations by year
source("01_patent_registration.R")
#2 TOP counties
title <- sprintf("TOP%d counties\n(%s)", max, file_name)
country_table <- table(data$country)
print(country_table)
country_table_sorted <- sort(country_table, decreasing=TRUE)
country_table_top <- country_table_sorted[1:max]
print(country_table_top)
barplot(country_table_top,
main=title, xlab="country", ylab="count")
#3 TOP countries' by year
title <- sprintf("TOP%d countries by year\n(%s)", max, file_name)
data_top <- data[data$country %in% names(country_table_top), ]
country_year_table_top <- table(data_top$country, data_top$year)
print(country_year_table_top)
colors <- qualitative_hcl(nrow(country_year_table_top), palette = 'Dynamic')
barplot(country_year_table_top, beside = TRUE,
main=title, xlab = "Year", ylab = "Count",
legend=rownames(country_year_table_top),
col=colors)
#1 Patent registrations by year
source("01_patent_registration.R")
#1 Patent registrations by year
title <- sprintf("Patent registrations by year\n(%s)", file_name)
year_table <- table(data$year)
print(year_table)
barplot(year_table,
main=title, xlab="year", ylab="patent count")
#2 TOP counties
title <- sprintf("TOP%d counties\n(%s)", max, file_name)
country_table <- table(data$country)
print(country_table)
country_table_sorted <- sort(country_table, decreasing=TRUE)
country_table_top <- country_table_sorted[1:max]
print(country_table_top)
barplot(country_table_top,
main=title, xlab="country", ylab="count")
title <- sprintf("TOP%d counties\n(%s)", max, file_name)
country_table <- table(data$country)
print(country_table)
country_table_sorted <- sort(country_table, decreasing=TRUE)
country_table_top <- country_table_sorted[1:max]
print(country_table_top)
barplot(country_table_top,
main=title, xlab="country", ylab="count")
#3 TOP countries' by year
source("03_top_country_by_year.R")
