lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in unique(myout$meta$country)){
if(country %in% top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
myout$meta$ETC <- ifelse(myout$meta$country == country, 0, 1)
}
}
print(myout$meta)
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in unique(myout$meta$country)){
if(country %in% top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
}
print(myout$meta)
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
for (i in 1:nrow(myout$meta)){
if(myout$meta$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
myout$meta[i,][etc] <- 1
}
}
if(myout$meta[i,]$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
myout$meta[i,][etc] <- 1
}
}
for (i in 1:nrow(myout$meta)){
print(myout$meta[i,]$country)
}
if(myout$meta[i,]$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
myout$meta[i,][etc] <- 1
}
for (i in 1:nrow(myout$meta)){
print(myout$meta[i,]$country)
if(myout$meta[i,]$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
myout$meta[i,][etc] <- 1
}
}
print(myout$meta)
for (i in 1:nrow(myout$meta)){
print(myout$meta[i,]$country)
if(myout$meta[i,]$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
myout$meta[i,]$etc <- 1
}
}
print(myout$meta)
for (i in 1:nrow(myout$meta)){
print(myout$meta[i,]$country)
if(myout$meta[i,]$country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
#myout$meta[i,]$etc <- 1
}
}
warings()
warnings()
for (i in 1:nrow(myout$meta)){
country <- myout$meta[i,]$country
print(myout$meta[i,]$country)
ifcountry %in% top_countries){
country <- myout$meta[i,]$country
print(myout$meta[i,]$country)
for (i in 1:nrow(myout$meta)){
country <- myout$meta[i,]$country
print(myout$meta[i,]$country)
if(country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
#myout$meta[i,]$etc <- 1
}
}
print(myout$meta)
for (i in 1:nrow(myout$meta)){
country <- myout$meta[i,]$country
print(country)
if(country %in% top_countries){
myout$meta[i,][country] <- 1
} else {
#myout$meta[i,]$etc <- 1
}
}
for (i in 1:nrow(myout$meta)){
country <- myout$meta[i,]$country
print(country)
if(country %in% top_countries){
#myout$meta[i,][country] <- 1
} else {
#myout$meta[i,]$etc <- 1
}
}
#make new dummy variable
for(country in unique(myout$meta$country)){
if(country %in% top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
}
myout$meta$etc <- ifelse(myout$meta$country == country, 1, 0)
print(myout$meta)
#make new dummy variable
for(country in unique(myout$meta$country)){
if(country %in% top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
print(myout$meta)
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
print(myout$meta)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
print(prevalence)
print(myout)
#set number of topics for stm
topic_count = 4
#STM
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
labelTopics(mystm, topics=1:topic_count, n=7)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
#STM
topic_count <- 15
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
plot(mystm, type = "summary", text.cex = 1)
labelTopics(mystm, topics=1:topic_count, n=7)
#myresult <- estimateEffect(prevalence, mystm, myout$meta) #difference??
print(names(myout$meta))
print(myout$meta$app_year)
myresult <- estimateEffect(c(1:topic_count) ~ app_year + US + JP+ KR + FR + etc, mystm, myout$meta)
#myresult <- estimateEffect(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR + app_year:DE , mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("effect_",Sys.time(),".csv"))
myresult <- estimateEffect(reg, mystm, myout$meta)
reg = c(1:topic_count) ~ app_year + US + JP+ KR + FR + etc
myresult <- estimateEffect(reg, mystm, myout$meta)
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
myresult <- estimateEffect(reg, mystm, myout$meta)
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
myresult <- estimateEffect(reg, mystm, myout$meta)
#myresult <- estimateEffect(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR + app_year:DE , mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("effect_",Sys.time(),".csv"))
#beta
logbeta <- as.data.frame(mystm[["beta"]][["logbeta"]][[1]])
beta <- as.data.frame(exp(logbeta))
colnames(beta) <- myout$vocab
colnames(logbeta) <- myout$vocab
write.csv(beta, file=paste0("beta_",Sys.time(),".csv"), row.names=TRUE)
write.csv(logbeta, file=paste0("logbeta_",Sys.time(),".csv"), row.names=TRUE)
#logbeta
logbeta_export <- mystm[["beta"]][["logbeta"]][[1]]
logbeta_export <- as.data.frame(logbeta_export)
colnames(logbeta_export) <- myout5$vocab
write.csv(logbeta_export, file= 'logbeta.csv', row.names=TRUE)
#beta
logbeta <- as.data.frame(mystm[["beta"]][["logbeta"]][[1]])
beta <- as.data.frame(exp(logbeta))
colnames(beta) <- myout5$vocab
write.csv(beta, file = 'beta.csv', row.names=TRUE)
#STM
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = reg,
seed = 16)
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
stopwords <- c(stopwords, custom)
# Preprocessing - textProcessor
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
myout
myout$vocab
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
stopwords <- c(stopwords, custom)
# Preprocessing - textProcessor
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
data_topic <- data
top_countries = names(country_table_top)
data_topic$text <- paste(data_topic$patent_title, " ", data_topic$patent_abstract)
data_topic$text <- str_replace_all(data_topic$text, '-', ' a ')
stopwords <- stopwords(language = "en", source = "smart")
custom <- c('invention', 'thereof', 'therefore', 'therefrom')
stopwords <- c(stopwords, custom)
# Preprocessing - textProcessor
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
# Get output
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#add stopwords
custom_add = c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
stopwords <- c(csw, custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
print(prevalence)
print(myout)
#STM
topic_count <- 15
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
plot(mystm, type = "summary", text.cex = 1)
labelTopics(mystm, topics=1:topic_count, n=7)
print(names(myout$meta))
print(myout$meta$app_year)
print(names(myout$meta))
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("effect_",Sys.time(),".csv"))
custom_add <- c(custom_add, 'includ')
stopwords <- c(csw, custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#add stopwords
custom_add <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
custom_add <- c(custom_add, 'includ', 'total', 'tool', 'valu', 'width', 'set', 'result', 'plus', 'measur', 'later', 'includ', 'high', 'enabl')
stopwords <- c(csw, custom_add)
print(custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
#add stopwords
custom_add <- c('ad','analyz','annular','appli','applic','caus','characterist','equal','equip','euv','event','frequenc','height','high','higher','introduc','involv','length','level','make','oppos','opposit','paramet','prefer','requir')
custom_add <- c(custom_add, 'includ', 'total', 'tool', 'valu', 'width', 'set', 'result', 'plus', 'measur', 'later', 'includ', 'high', 'enabl')
stopwords <- c(stopwords, custom_add)
print(custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
print(prevalence)
print(myout)
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
print(prevalence)
print(myout)
# TODO: generate equation
#print(paste(unique(myout$meta$country), sep='+'))
#regression_equation = paste(unique(myout$meta$country), sep='+')
#prevalence = parse(text=paste('~',regression_equation)[[1]])
prevalence =  ~ app_year + US + JP + KR + FR + DE
# Find best topic count
topic_counts <- c(10, 30, 50)
kresult <- searchK(myout$documents, myout$vocab, data=myout$meta,
topic_counts,
prevalence = prevalence,
seed = 16)
plot(kresult)
#STM
topic_count <- 30
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
labelTopics(mystm, topics=1:topic_count, n=7)
print(names(myout$meta))
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("effect_",Sys.time(),".csv"))
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
myresult <- estimateEffect(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
print(custom_add)
custom_add <- c(custom_add, 'method', 'contain', 'target', 'control', 'unit', 'end', 'imag', 'object')
print(custom_add)
stopwords <- c(stopwords, custom_add)
mypreprocess <- textProcessor(data_topic$text, metadata = data_topic[c("app_year", "country")]
, lowercase = TRUE
, removepunctuation = TRUE
, customstopwords = stopwords
, removestopwords = TRUE
, removenumbers = TRUE
, stem = TRUE
, wordLengths = c(2,Inf))
myout <-prepDocuments(mypreprocess$documents,
mypreprocess$vocab, mypreprocess$meta,
lower.thresh = nrow(data_topic)/100)
myout$vocab
#make new dummy variable
for(country in top_countries){
myout$meta[country] <- ifelse(myout$meta$country == country, 1, 0)
}
myout$meta$etc <- ifelse(myout$meta$country %in% top_countries, 0, 1)
#STM
topic_count <- 30
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = prevalence,
seed = 16)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
print(names(myout$meta))
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("effect_",Sys.time(),".csv"))
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
#beta
logbeta <- as.data.frame(mystm[["beta"]][["logbeta"]][[1]])
beta <- as.data.frame(exp(logbeta))
colnames(beta) <- myout$vocab
colnames(logbeta) <- myout$vocab
write.csv(beta, file=paste0("results/beta_",Sys.time(),".csv"), row.names=TRUE)
write.csv(logbeta, file=paste0("results/logbeta_",Sys.time(),".csv"), row.names=TRUE)
print(typeof(prevalence))
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
seed = 16)
plot(mystm, type = "summary", labeltype = "prob", text.cex = 1)
plot(mystm, type = "labels", labeltype = "prob", text.cex = 1)
labelTopics(mystm, topics=1:topic_count, n=7)
print(names(myout$meta))
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
mystm <- stm(myout$documents, myout$vocab, data=myout$meta,
K=topic_count,
prevalence = ~app_year,
seed = 16)
reg = c(1:topic_count) ~ app_year
myresult <- estimateEffect(reg, mystm, myout$meta)
result = summary(myresult)
print(result[3]$tables)
write.csv(result[3]$tables,file=paste0("results/effect_",Sys.time(),".csv"))
reg = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE +
app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
reg = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE +
app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
reg = lm(c(1:topic_count) ~ app_year + myout$meta$US + JP + KR + FR + DE +
app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
reg = lm(c(1:topic_count) ~ app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
reg = lm(c(1:topic_count) ~ app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
app_year:myout$meta$US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
reg = lm(c(1:topic_count) ~ app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
app_year:myout$meta$US + app_year:myout$meta$JP + app_year:myout$meta$KR + app_year:myout$meta$FR + app_year:myout$meta$DE)
reg = lm(c(1:topic_count) ~ myout$meta$app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
app_year:myout$meta$US + app_year:myout$meta$JP + app_year:myout$meta$KR + app_year:myout$meta$FR + app_year:myout$meta$DE)
reg = lm(c(1:topic_count) ~ app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
app_year:myout$meta$US + app_year:myout$meta$JP + app_year:myout$meta$KR + app_year:myout$meta$FR + app_year:myout$meta$DE)
reg = lm(c(1:topic_count) ~ myout$meta$app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
myout$meta$app_year:myout$meta$US + myout$meta$app_year:myout$meta$JP + myout$meta$app_year:myout$meta$KR + myout$meta$app_year:myout$meta$FR + myout$meta$app_year:myout$meta$DE)
reg = lm(c(1:topic_count) ~ myout$meta$app_year + myout$meta$US + myout$meta$JP + myout$meta$KR + myout$meta$FR + myout$meta$DE +
myout$meta$app_year:myout$meta$US + myout$meta$app_year:myout$meta$JP + myout$meta$app_year:myout$meta$KR + myout$meta$app_year:myout$meta$FR + myout$meta$app_year:myout$meta$DE)
reg = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
myresult <- estimateEffect(lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE)
, mystm, myout$meta)
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
print(length(app_year))
print(length(US))
application_year <- sapply(1:nrow(data), function(i) as.numeric(substr(data[i,]$applications[[1]]$app_date,1, 4)))
data$year <- patent_year
data$app_year <- application_year
reg = c(1:topic_count) ~ app_year + US + JP + KR + FR + DE + app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE
reg2 = lm(c(1:topic_count) ~ app_year + US + JP + KR + FR + DE
+ app_year:US + app_year:JP + app_year:KR + app_year:FR +  + app_year:DE, data=myout$meta)
